Part 1
Total time: [user time from a "time" command]
    user    0m0.849s
Number of hashes computed: [count of the # of hashes computed] 
    267516
Passwords cracked: [number cracked]
    2734
Time per hash computed: [seconds per hash]
    0.849 seconds / 267516 hashes = 3.17e-6 seconds per hash
Time per password cracked: [seconds per password]
     0.849 seconds / 2734 passwords = 3.11e-4  seconds per password
Passwords cracked per number of hashes computed: [passwords per hash]
    2734 passwords / 267516 hashes = 0.01 passwords per hash

Part 2
Total time: [user time from a "time" command]
    user 368m55.486s
Number of hashes computed: [count of the # of hashes computed] 
    13677984530
Passwords cracked: [number cracked]
    530
Time per hash computed: [seconds per hash]
    22135.486 seconds / 13677984530 hashes = 1.62e-6 seconds per hash
Time per password cracked: [seconds per password]
    22135.486 seconds / 530 passwords = 41.77 seconds per password 
Passwords cracked per number of hashes computed: [passwords per hash]
    530 passwords / 13677984530 hashes = 3.86e-8 passwords per hash

Part 3
Total time: [user time from a "time" command]
    user	26m47.825s
Number of hashes computed: [count of the # of hashes computed] 
    2374 users * 267517 possible passwords for each user = 635085358 hashes
Passwords cracked: [number cracked]
    2734 
Time per hash computed: [seconds per hash]
    1607.825 seconds / 635085358 hashes = 2.53167e-6 seconds per hash 
Time per password cracked: [seconds per password]
    1607.825 / 2374 passwords = 0.68 seconds per password
Passwords cracked per number of hashes computed: [passwords per hash]
    2374 passwords / 635085358 hashes = 3.738e-6 passwords per hash 

Part 4
Which software did you use?
What commands did you issue to do your password-cracking?
How many passwords did you crack?
How long did it take?

Analysis:
- Did your time per hash computed change between phases? By what factor? Why?
- Did your time per password crack change between phases? By what factor? Why?
- Suppose you wanted to precompute all the hashes for each possible password
so you could just look up the password in a table indexed by the hash. How much
memory would be required for each phase?
- How well did hashcat or john do compared to your python program? Give details.
- Give 3-4 reasons we should store password hashes and not the passwords themselves.
Think in terms of threats, who the attackers might be, etc.